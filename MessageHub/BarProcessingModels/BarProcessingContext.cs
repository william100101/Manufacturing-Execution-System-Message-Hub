// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace MessageHub.BarProcessingModels
{
    public partial class BarProcessingContext : DbContext
    {
        public BarProcessingContext()
        {
        }

        public BarProcessingContext(DbContextOptions<BarProcessingContext> options)
            : base(options)
        {
            this.Database.SetCommandTimeout(TimeSpan.FromSeconds(60 * 6));
        }

        public virtual DbSet<FromBiz> FromBizs { get; set; }
        public virtual DbSet<MessageState> MessageStates { get; set; }
        public virtual DbSet<ToBiz> ToBizs { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<FromBiz>(entity =>
            {
                entity.ToTable("FromBiz");

                entity.Property(e => e.FromBizId).HasColumnName("FromBizID");

                entity.Property(e => e.AckReceived).HasDefaultValueSql("((0))");

                entity.Property(e => e.ErrorDescription)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.HeatNumber)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IngotNumber)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LineId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LineID");

                entity.Property(e => e.LotNumber)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Message)
                    .IsRequired()
                    .HasColumnType("xml");

                entity.Property(e => e.MessageName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MessageStateId).HasColumnName("MessageStateID");

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessedTime).HasColumnType("datetime");

                entity.Property(e => e.QueuedTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Response).HasDefaultValueSql("((0))");

                entity.Property(e => e.ToBizId)
                    .HasColumnName("ToBizID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TransactionId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TransactionID");

                entity.HasOne(d => d.MessageState)
                    .WithMany(p => p.FromBizs)
                    .HasForeignKey(d => d.MessageStateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__FromBiz__Message__10566F31");
            });

            modelBuilder.Entity<MessageState>(entity =>
            {
                entity.ToTable("MessageState");

                entity.Property(e => e.MessageStateId)
                    .ValueGeneratedNever()
                    .HasColumnName("MessageStateID");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ToBiz>(entity =>
            {
                entity.ToTable("ToBiz");

                entity.Property(e => e.ToBizId).HasColumnName("ToBizID");

                entity.Property(e => e.Ackreceived).HasColumnName("ACKReceived");

                entity.Property(e => e.ErrorDescription)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.FromBizId).HasColumnName("FromBizID");

                entity.Property(e => e.HeatNumber)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IngotNumber)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LineId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LineID");

                entity.Property(e => e.LotNumber)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Message)
                    .IsRequired()
                    .HasColumnType("xml");

                entity.Property(e => e.MessageFailedInMf).HasColumnName("MessageFailedInMF");

                entity.Property(e => e.MessageName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MessageStateId).HasColumnName("MessageStateID");

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessedTime).HasColumnType("datetime");

                entity.Property(e => e.QueuedTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Response).HasDefaultValueSql("((0))");

                entity.Property(e => e.ResubmitUseridId)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ResubmittedByUserId)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.StatusReceived).HasDefaultValueSql("((0))");

                entity.Property(e => e.TransactionId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TransactionID");

                entity.HasOne(d => d.MessageState)
                    .WithMany(p => p.ToBizs)
                    .HasForeignKey(d => d.MessageStateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ToBiz__MessageSt__19DFD96B");
            });

            modelBuilder.HasSequence("TransactionID");

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}