@using Microsoft.JSInterop;
@inject AuthenticationStateProvider AuthenticationStateProvider

@page "/debug"
@*<div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Dropdown
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
            <button class="dropdown-item" type="button">Action</button>
            <button class="dropdown-item" type="button">Another action</button>
            <button class="dropdown-item" type="button">Something else here</button>
        </div>
    </div>*@
@*<button @onclick="@LogUsername">Evalute User</button>*@

<button @onclick="@GetMessageNames">FromBiz</button>
@if(messages != null)
{
    <ul>
        @foreach (var message in messages)
        {
            <li>@message</li>
        }
    </ul>
}

@code {

    List<string> messages = null;

    private void GetMessageNames()
    {
        //messages = MessageHubService.GetMessageNames();
    }

    private async Task LogUsername()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            Console.WriteLine($"{user.Identity.Name} is authenticated.");
        }
        else
        {
            Console.WriteLine("The user is NOT authenticated.");
        }
    }
}
